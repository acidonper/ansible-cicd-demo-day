---
- name: This is a hello-world example
  hosts: localhost
  tasks:

    # - name: "Create GitLab Group"
    #   community.general.gitlab_group:
    #     api_url: http://192.168.0.103/
    #     validate_certs: false
    #     api_token: "token-string-here123"
    #     name: ansible-tower
    #     path: ansible-tower
    #     state: present
    #     project_creation_level: developer 
    #     subgroup_creation_level: maintainer

        # The group will by created at https://gitlab.dj-wasabi.local/super_parent/parent/my_first_group
    - name: "Create GitLab SubGroup"
      community.general.gitlab_group:
        api_url: http://192.168.0.103/
        validate_certs: True
        api_token: "token-string-here123"
        name: templates
        path: templates
        state: present
        parent: "ansible-tower"
        project_creation_level: developer
        subgroup_creation_level: maintainer

    - name: generate SSH key "{{ssh_key_filename}}"
      local_action:
        module: user
        name: "adelahoz"
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_bits: 4096
        ssh_key_file: .ssh/gitlab
        ssh_key_passphrase: "gitlab"
        force: yes

    - name: "Create GitLab User"
      community.general.gitlab_user:
        api_url: http://192.168.0.103/
        validate_certs: True
        api_token: "token-string-here123"
        name: "Alejandro de la Hoz"
        username: adelahoz
        password: password
        email: adelahoz@redhat.com
        sshkey_name: gitlab
        sshkey_file: "{{ lookup('file', '~/.ssh/gitlab.pub') }}"
        state: present
        group: ansible-tower/templates
        access_level: owner
        reset_password: "false"
        confirm: "false"

    # - name: create a user
    #   uri:
    #     url: http://localhost/api/v4/users
    #     method: POST
    #     headers: 
    #       Authorization: "Bearer {{token.json.access_token}}"
    #     body_format: json
    #     body:
    #       email: adelahoz@redhat.com
    #       username: adelahoz
    #       name: "Any Body"
    #       password: "password"
    #       reset_password: "false"
    #       force_random_password: "false"
    #       skip_confirmation: "true"
    #     status_code: 201, 409 # 201 is created, 409 is already exists; makes idempotent
    #     validate_certs: yes
    #   register: gitlab_users



    - name: Create GitLab Project
      community.general.gitlab_project:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        name: template_ansible_playbooks    
        group: ansible-tower/templates
        visibility: internal
        import_url: https://github.com/adelahozredhat/template-ansible-playbooks.git

    - name: Create GitLab Project
      community.general.gitlab_project:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        name: template_ansible_role    
        group: ansible-tower/templates
        visibility: internal
        import_url: https://github.com/adelahozredhat/template-ansible-role.git

    - name: Create GitLab Project
      community.general.gitlab_project:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        name: template_ansible_collection    
        group: ansible-tower/templates
        visibility: internal
        import_url: https://github.com/adelahozredhat/template-ansible-collection.git

    - name: Create GitLab Project
      community.general.gitlab_project:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        name: templates-playbooks-lifecicle    
        group: ansible-tower/templates
        visibility: internal
        import_url: https://github.com/adelahozredhat/templates-playbooks-lifecicle.git

    # - name: Create GitLab Project
    #   community.general.gitlab_project:
    #     api_url: http://localhost/
    #     api_token: "token-string-here123"
    #     name: template_ansible_collection    
    #     group: ansible-tower/templates
    #     visibility: internal
    #     import_url: https://github.com/adelahozredhat/template_ansible_collection.git

    # - name: use the rails console to create token group
    #   # {{':'}} is to escape the colon
    #   shell: sudo gitlab-rails runner "admin = User.find_by_username('root'); group = Group.find_by_name('ansible-tower'); bot = Users{{':'}}{{':'}}CreateService.new(admin, { name{{':'}} 'group_token', username{{':'}} 'group_bot', email{{':'}} 'group_#{group.id}_bot@example.com', user_type{{':'}} {{':'}}project_bot }).execute; bot.confirm; group.add_user(bot, {{':'}}maintainer); token = bot.personal_access_tokens.create(scopes{{':'}}[{{':'}}api, {{':'}}write_repository], name{{':'}} 'group_token'); "

    - name: Set or update some CI/CD variables
      community.general.gitlab_group_variable:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        group: ansible-tower
        purge: false
        vars:
          SECRET_TOKEN_KEY:
            value: group_token
            masked: true
            protected: true
            variable_type: env_var

    # - name: Add a user to a GitLab Group
    #   community.general.gitlab_group_members:
    #     api_url: http://localhost/
    #     validate_certs: True
    #     api_token: "token-string-here123"
    #     gitlab_group: groupname
    #     gitlab_user: adelahoz
    #     access_level: maintainer
    #     state: present


    # - name: Add a user to a GitLab Project
    #   community.general.gitlab_project_members:
    #     api_url: http://localhost/
    #     validate_certs: True
    #     api_token: "token-string-here123"
    #     project: my_first_project
    #     gitlab_user: adelahoz
    #     access_level: maintainer
    #     state: present

    # - name: Set or update some CI/CD variables
    #   community.general.gitlab_project_variable:
    #     api_url: https://gitlab.com
    #     api_token: secret_access_token
    #     project: markuman/dotfiles
    #     purge: false
    #     vars:
    #       ACCESS_KEY_ID: abc123
    #       SECRET_ACCESS_KEY:
    #         value: 3214cbad
    #         masked: true
    #         protected: true
    #         variable_type: env_var
    #         environment_scope: '*'

    # - name: "Register runner"
    #   community.general.gitlab_runner:
    #     api_url: https://gitlab.example.com/
    #     api_token: "{{ access_token }}"
    #     registration_token: 4gfdsg345
    #     description: Docker Machine t1
    #     state: present
    #     active: True
    #     tag_list: ['docker']
    #     run_untagged: False
    #     locked: False

    # - name: "Adding a project deploy key"
    #   community.general.gitlab_deploy_key:
    #     api_url: https://gitlab.example.com/
    #     api_token: "{{ api_token }}"
    #     project: "my_group/my_project"
    #     title: "Jenkins CI"
    #     state: present
    #     key: "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt4596k6YjzGGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9w..."

    # - name: Set or update some CI/CD variables
    #   community.general.gitlab_group_variable:
    #     api_url: https://gitlab.com
    #     api_token: secret_access_token
    #     group: scodeman/testgroup/
    #     purge: false
    #     vars:
    #       ACCESS_KEY_ID: abc123
    #       SECRET_ACCESS_KEY:
    #         value: 3214cbad
    #         masked: true
    #         protected: true
    #         variable_type: env_var


    # - name: Git checkout
    #   ansible.builtin.git:
    #     repo: 'https://foosball.example.org/path/to/repo.git'
    #     dest: /srv/checkout
    #     version: release-0.22


    # - name: Git checkout
    #   ansible.builtin.git:
    #     repo: 'https://foosball.example.org/path/to/repo.git'
    #     dest: /srv/checkout
    #     version: release-0.22


    # - name: Git checkout
    #   ansible.builtin.git:
    #     repo: 'https://foosball.example.org/path/to/repo.git'
    #     dest: /srv/checkout
    #     version: release-0.22


- name: This is a hello-world example
  hosts: localhost
  tasks:

    - name: Create a new token using username/password
      connection: local
      ansible.controller.token:
        description: 'Token de prueba'
        scope: "write"
        state: present
        controller_host: "192.168.0.150"
        controller_username: "admin"
        controller_password: "pgadmin"
        validate_certs: false

    - name: Create a valid SCM credential from a private_key file
      ansible.controller.credential:
        name: SCM Credential
        organization: Default
        state: present
        credential_type: Source Control
        controller_host: "192.168.0.150"
        controller_username: "admin"
        controller_password: "pgadmin"
        validate_certs: false
        inputs:
          username: adelahoz
          password: password
          ssh_key_data: "{{ lookup('file', '~/.ssh/gitlab') }}"
          ssh_key_unlock: "passphrase"

    - name: Add project
      connection: local
      ansible.controller.project:
        name: "PR_GLOBAL_CICD_Collection"
        description: "Project Global CICD Collection"
        organization: "Default"
        state: present
        controller_host: "192.168.0.150"
        controller_username: "admin"
        controller_password: "pgadmin"
        scm_url: http://192.168.0.103/ansible-tower/templates/templates-playbooks-lifecicle.git
        scm_type: git
        credential: SCM Credential
        validate_certs: false

    - name: Add EE to the controller instance
      ansible.controller.execution_environment:
        name: "My EE"
        image: quay.io/adelahoz/ansible-ee-ansible-test
        controller_host: "192.168.0.150"
        controller_username: "admin"
        controller_password: "pgadmin"
        validate_certs: false





- name: This is a hello-world example
  hosts: localhost
  tasks:

    - name: "Adding a project hook"
      community.general.gitlab_hook:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        name: template_ansible_collection    
        group: ansible-tower/templates
        hook_url: "https://my-ci-server.example.com/gitlab-hook"
        state: present
        push_events: yes
        tag_push_events: yes
        hook_validate_certs: no
        token: "my-super-secret-token-that-my-ci-server-will-check"


    - name: "Adding a project hook"
      community.general.gitlab_hook:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        name: template_ansible_role    
        group: ansible-tower/templates
        hook_url: "https://my-ci-server.example.com/gitlab-hook"
        state: present
        push_events: yes
        tag_push_events: yes
        hook_validate_certs: no
        token: "my-super-secret-token-that-my-ci-server-will-check"



    - name: "Adding a project hook"
      community.general.gitlab_hook:
        api_url: http://192.168.0.103/
        api_token: "token-string-here123"
        name: template_ansible_playbooks    
        group: ansible-tower/templates
        hook_url: "https://my-ci-server.example.com/gitlab-hook"
        state: present
        push_events: yes
        tag_push_events: yes
        hook_validate_certs: no
        token: "my-super-secret-token-that-my-ci-server-will-check"

